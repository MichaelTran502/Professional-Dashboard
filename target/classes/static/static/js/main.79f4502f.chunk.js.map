{"version":3,"sources":["client.js","App.js","reportWebVitals.js","index.js"],"names":["checkStatus","response","ok","error","Error","statusText","Promise","reject","Header","Layout","Content","Footer","Sider","SubMenu","Menu","columns","title","dataIndex","key","antIcon","LoadingOutlined","style","fontSize","spin","App","useState","students","setStudents","collapsed","setCollapsed","fetching","setFetching","fetchStudents","fetch","then","res","json","data","console","log","useEffect","minHeight","collapsible","onCollapse","className","theme","defaultSelectedKeys","mode","Item","icon","PieChartOutlined","DesktopOutlined","UserOutlined","TeamOutlined","FileOutlined","padding","margin","indicator","length","dataSource","bordered","pagination","pageSize","scroll","y","rowKey","student","id","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79f4502f.chunk.js","sourcesContent":["import fetch from 'unfetch';\n\nconst checkStatus = response => {\n  if (response.ok) {\n    return response;\n  }\n  // convert non-2xx HTTP responses into errors:\n  const error = new Error(response.statusText);\n  error.response = response;\n  return Promise.reject(error);\n}\n\nexport const getAllStudents = () => {\n  return fetch('api/v1/students')\n    .then(checkStatus)\n}","import './App.css';\nimport { useState, useEffect } from 'react';\nimport { getAllStudents } from './client';\nimport { Layout, Menu, Breadcrumb, Table, Spin, Empty } from 'antd';\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n  LoadingOutlined \n} from '@ant-design/icons';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst columns = [\n  {\n    title: 'Id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n  },\n  {\n    title: 'Gender',\n    dataIndex: 'gender',\n    key: 'gender',\n  },\n];\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nfunction App() {\n\n\n  const [students, setStudents] = useState([]);\n  const [collapsed, setCollapsed] = useState(false);\n  const [fetching, setFetching] = useState(true);\n\n  const fetchStudents = () => {\n    getAllStudents()\n    .then(res => res.json())\n    .then (data => {\n      console.log(data);\n      setStudents(data);\n      setFetching(false);\n    })\n  }\n\n  useEffect(() => {\n    console.log(\"fetched students\")\n    fetchStudents();\n  }, [])\n\n  const renderStudents = () => {\n    if (fetching) {\n      return <Spin indicator={antIcon} />\n    }\n\n    if (students.length <= 0) {\n      return <Empty />;\n    } else {\n      return <Table \n        dataSource={students} \n        columns={columns} \n        bordered\n        title={() => 'Students'}\n        pagination={{ pageSize: 50 }} \n        scroll={{ y: 240 }}\n        rowKey={(student) => student.id}\n        />;\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n          <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n            Option 1\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n            Option 2\n          </Menu.Item>\n          <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"User\">\n            <Menu.Item key=\"3\">Tom</Menu.Item>\n            <Menu.Item key=\"4\">Bill</Menu.Item>\n            <Menu.Item key=\"5\">Alex</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\n            <Menu.Item key=\"6\">Team 1</Menu.Item>\n            <Menu.Item key=\"8\">Team 2</Menu.Item>\n          </SubMenu>\n          <Menu.Item key=\"9\" icon={<FileOutlined />}>\n            Files\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>User</Breadcrumb.Item>\n            <Breadcrumb.Item>Bill</Breadcrumb.Item>\n          </Breadcrumb>\n          <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n            {renderStudents()}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Tran Corp Â©2021</Footer>\n      </Layout>\n    </Layout>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}